// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

//user model
model User {
  id              String            @id @default(uuid())
  name            String
  email           String            @unique
  password        String
  confirmPassword String
  role            UserRole?         @default(USER)
  isActive        Boolean?          @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  AdoptionRequest AdoptionRequest[]

  @@map("users")
}

//pet model

model Pet {
  id              String            @id @default(uuid())
  name            String
  photos          String
  description     String
  age             Int
  breed           String
  gender          String
  healthStatus    String
  currentLocation String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  AdoptionRequest AdoptionRequest[]

  @@map("pets")
}

//adoption model

model AdoptionRequest {
  id                     String         @id @default(uuid())
  userId                 String
  user                   User           @relation(fields: [userId], references: [id])
  petId                  String
  pet                    Pet            @relation(fields: [petId], references: [id])
  status                 AdoptionStatus @default(PENDING)
  petOwnershipExperience String
  createdAt              DateTime       @default(now())
  updatedAt              DateTime       @updatedAt

  @@map("adoptionRequests")
}

//status
enum AdoptionStatus {
  PENDING
  APPROVED
  REJECTED
}
